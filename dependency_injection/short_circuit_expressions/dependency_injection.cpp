extern "C" {
#include "lua.h"
#include "lualib.h"
#include "lauxlib.h"
}
#include "action.h"
#include "and.h"
#include "context.h"
#include "equals.h"
#include "isset.h"
#include "or.h"
#include "question_context.h"

// This included file was generated by tolua++
#pragma GCC diagnostic ignored "-Wwrite-strings"
#include "short_circuit_expressions.c"

#include <iostream>

void run(const char* filename) {
  lua_State* L= lua_open();
  luaopen_base(L);
  luaopen_io(L);
  luaopen_string(L);
  luaopen_math(L);
  tolua_short_circuit_expressions_open(L);

  if (luaL_loadfile(L, filename) || lua_pcall(L, 0, 0, 0)) {
    fprintf(stderr, "cannot run %s: %s", filename, lua_tostring(L, -1));
    exit(1);
  }
  lua_getglobal(L, "main");
  Tree* to_run= *((Tree**)lua_touserdata(L, -1));
  QuestionContext context;
  if (to_run->Evaluate(context)) {
    std::cout << "Result is true.\n";
  } else {
    std::cout << "Result is false.\n";
  }
  lua_close(L);
}

int main(int argc, char* argv[]) {
  // note: we have to start from 1,
  // because 0 is the name of the executable
  for (int i= 1; i < argc; ++i) {
    run(argv[i]);
  }
  return 0;
}

