spawn ./miniprolog
send "female(cathy).\n"
send "female(denise).\n"
send "female(fanny).\n"
send "male(anthony).\n"
send "male(bertram).\n"
send "male(eric).\n"
send "parent(bertram, eric).\n"
send "parent(cathy, eric).\n"
send "parent(eric, denise).\n"
send "parent(anthony, fanny).\n"
send "wife(cathy, bertram).\n"
# Some of these are political nowadays, but 
# this is a historical example, and history has always
# been un-PC
send "husband(A, B) :- wife(B, A).\n"
send "mother(A, B) :- female(A), parent(A, B).\n"
send "father(A, B) :- male(A), parent(A, B).\n"
send "child(A, B) :- parent(B, A).\n"
send "descendent(A, B) :- child(A, B).\n"
send "descendant(A, B) :- child(A, X), descendent(X, B).\n"
send "?- female(Who).\n"
expect "Who = cathy"
send "y\n"
expect "Who = denise"
send "y\n"
expect "Who = fanny"
send "y\n"
expect "No"
send "?- parent(eric, Who).\n"
expect "Who = denise"
send "y\n"
expect "No"
send "?- child(eric, Who).\n"
expect "Who = bertram"
send "y\n"
expect "Who = cathy"
send "y\n"
expect "No"
send "?- descendent(eric, Who).\n"
expect "Who = bertram"
send "y\n"
expect "Who = cathy"
send "y\n"
expect "No"
